:root {
  /* Main Colors */
  --col-brown: #35322a;
  --col-teal: #3f5e5a;
  --col-steel: #687c7c;
  --col-orange: #a3320b;
  --col-tan: #efc88b;

  /* Main Colors, Semi-transparent @ cc */
  --col-brown-semi: #35322add;
  --col-teal-semi: #3f5e5add;
  --col-steel-semi: #687c7cdd;
  --col-orange-semi: #a3320bdd;
  --col-tan-semi: #efc88bdd;

  /* Font Stylings */
  --font-p-weight: 600;
  --font-p-spacing: 1.3px;
  --font-p-size: 2.0vh;
  --font-p-size-xs: 1.8vh;

  /* Font Families */
}

body {
  background-image: url('../../assets/images/pebbles-bg.png');
  background-color: var(--col-steel-semi);
}

.not-compatible {
  display: none;
  overflow-x: hidden;
  overflow-y: hidden;
  background-color: var(--col-orange);
  color: var(--col-tan);
  height: 250vh;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 5;
}

.not-compatible h1 {
  font-family: 'Raleway', monospace;
}

/* helper class for hiding home page elements upon load*/
.hidden {
  display: none;
}

/* CSS for parallax movement. Taken from an online tutorial */
.wrapper {
  /* The height needs to be set to a fixed value for the effect to work.
   * 100vh is the full height of the viewport. */
  height: 100vh;
  /* The scaling of the images would add a horizontal scrollbar, so disable x overflow. */
  overflow-x: hidden;
  /* Enable scrolling on the page. */
  overflow-y: auto;
  /* Set the perspective to 2px. This is essentailly the simulated distance from the viewport to transformed objects.*/
  perspective: 2px;
  margin-bottom: 0;
}

.section {
  /* Needed for children to be absolutely positioned relative to the parent. */
  position: relative;
  margin-bottom: 0;
}

.parallax::after {
  /* Display and position the pseudo-element */
  content: " ";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;

  /* Move the pseudo-element back away from the camera,
   * then scale it back up to fill the viewport.
   * Because the pseudo-element is further away, it appears to move more slowly, like in real life. */
  transform: translateZ(-1px) scale(1.5);
  /* Force the background image to fill the whole element. */
  background-size: 100%;
  /* Keep the image from overlapping sibling elements. */
  z-index: -1;
}

/* Background setters for parallax */
.bg1::after {
  background-image: url('../../assets/images/bunny-cropped.jpg');
  background-size: cover;
}

.bg2::after {
  background-image: url('../../assets/images/ga.png');
  background-size: cover;
}

.bg3::after {
  background-image: url('../../assets/Images/hanoi-sm.png');
  background-size: cover;
}

.bg4::after {
  background-image: url('../../assets/Images/motto-track.png');
  background-size: cover;
}

p {
  color: var(--col-brown);
  font-size: var(--font-p-size-xs);
  font-weight: var(--font-p-weight);
  letter-spacing: var(--font-p-spacing);
}

@media screen and (max-width: 16.8em) {
  .not-compatible {
    display: block;
  }

  .wrapper {
    overflow-y: hidden;
  }
}

@media screen and (min-width: 20em) {
  p {
    font-size: var(--font-p-size);
  }
}

@media screen and (min-width: 64em) {
  .bg1::after {
    background-image: url('../../assets/images/bunny.jpg');
  }
}
